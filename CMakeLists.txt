CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

#SET(CMAKE_INSTALL_PREFIX ${PROJECT_BINARY_DIR})

SET(CMAKE_VERBOSE_MAKEFILE ON)
SET(CMAKE_BUILD_TYPE Debug)

IF(CMAKE_COMPILER_IS_GNUCC)
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fmessage-length=0")
ENDIF(CMAKE_COMPILER_IS_GNUCC)
IF(CMAKE_COMPILER_IS_GNUCXX)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fmessage-length=0")
ENDIF(CMAKE_COMPILER_IS_GNUCXX)

PROJECT(CCOAP C)

FIND_PACKAGE(Threads REQUIRED)

IF(CMAKE_BUILD_TYPE MATCHES Debug)
  ADD_DEFINITIONS(-O0 -g -Wall -DPRINT_DEBUG)
ELSEIF(CMAKE_BUILD_TYPE MATCHES Release)
  ADD_DEFINITIONS(-O0 -g -Wall)
ELSE(CMAKE_BUILD_TYPE MATCHES Debug)
  ADD_DEFINITIONS(-O0 -g -Wall -DPRINT_DEBUG)
ENDIF(CMAKE_BUILD_TYPE MATCHES Debug)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/lib/ccoap; 
                    ${PROJECT_SOURCE_DIR}/lib/ccoapapps/client_tasks; 
                    ${PROJECT_SOURCE_DIR}/lib/ccoapapps/server_handlers;
                    ${PROJECT_SOURCE_DIR}/include)

LINK_DIRECTORIES(${PROJECT_BINARY_DIR}/lib)
TARGET_LINK_LIBRARIES(pthread)

ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/lib)
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/include)
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/apps)

